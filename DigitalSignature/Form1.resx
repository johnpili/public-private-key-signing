<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ggAAAABJRU5ErkJggg==
</value>
  </data>
</root>